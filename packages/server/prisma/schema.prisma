// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  firstName String
  lastName  String
  email     String  @unique
  password  String
  isAdmin   Boolean @default(false)
}

model Student {
  accessHistories Attendance[]

  id                 String   @id @default(uuid())
  firstName          String
  lastName           String
  dateOfBirth        DateTime
  level              String
  registration       String   @unique
  cardId             String   @unique
  speciality         String
  section            String
  directedWorkGroup  String
  practicalWorkGroup String
}

model AccessControl {
  attendanceExports AttendanceExport[]

  id        String   @id @default(uuid())
  userId    String
  name      String
  open      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@unique([userId, name])
}

model Attendance {
  student          Student          @relation(fields: [studentId], references: [id])
  attendanceExport AttendanceExport @relation(fields: [attendanceExportId], references: [id])

  id                 String   @id @default(uuid())
  studentId          String
  attendanceExportId String
  timestamp          DateTime @default(now())
}

model AttendanceExport {
  attendances   Attendance[]
  accessControl AccessControl @relation(fields: [accessControlId], references: [id])

  id              String   @id @default(uuid())
  accessControlId String
  timestamp       DateTime @default(now())
}
